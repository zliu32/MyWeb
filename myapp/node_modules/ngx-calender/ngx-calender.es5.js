import { Component, EventEmitter, Input, NgModule, Output, Renderer2, ViewChildren } from '@angular/core';
import { CommonModule } from '@angular/common';
import { format, getDaysInMonth, parse, startOfMonth } from 'date-fns';
var NgxCalenderComponent = (function () {
    /**
     * @param {?} renderer
     */
    function NgxCalenderComponent(renderer) {
        this.renderer = renderer;
        this.showHeader = true;
        this.clickedDate = new EventEmitter();
        this.getMonthDate = function (colInd, rowIndex) {
            if (colInd === 0 && rowIndex === 0) {
                this.count = 0;
            }
            this.isCurrentDate = false;
            if (rowIndex === 0) {
                if (colInd >= this.currMonthFirstDay) {
                    return this.getDate();
                }
            }
            else if (this.count < this.currDaysInCurrMonth) {
                return this.getDate();
            }
        };
        this.getDate = function () {
            this.count++;
            return this.count;
        };
    }
    /**
     * @return {?}
     */
    NgxCalenderComponent.prototype.ngOnInit = function () {
        this.count = 0;
        this.noOfRows = Array(5).map(function (x, i) { return i; });
        this.noOfColumn = Array(7).map(function (x, i) { return i; });
        this.currentDate = format(new Date(), 'D');
        this.currentMonth = format(new Date(), 'MMMM');
        this.currentYear = Number(format(new Date(), 'YYYY'));
        this.currDaysInCurrMonth = getDaysInMonth(new Date());
        this.currMonthFirstDay = (Number(format(startOfMonth(new Date()), 'd')) - 1);
    };
    /**
     * @return {?}
     */
    NgxCalenderComponent.prototype.ngAfterViewInit = function () {
        var _this = this;
        this.tdCollection.map(function (x) {
            if (x.nativeElement.innerText === _this.currentDate) {
                _this.renderer.addClass(x.nativeElement, 'currentDate');
            }
        });
    };
    /**
     * @param {?} evt
     * @return {?}
     */
    NgxCalenderComponent.prototype.clickHandler = function (evt) {
        if (evt.currentTarget['innerText'] !== '') {
            if (this.clickedDateCell) {
                this.renderer.removeClass(this.clickedDateCell, 'highlightDateCell');
            }
            this.clickedDateCell = (evt.currentTarget);
            this.renderer.addClass(this.clickedDateCell, 'highlightDateCell');
            var /** @type {?} */ date = parse(this.currentYear + "-" + this.currentMonth + "-" + this.currentDate);
            this.clickedDate.emit(date);
        }
    };
    return NgxCalenderComponent;
}());
NgxCalenderComponent.decorators = [
    { type: Component, args: [{
                selector: 'ng-calender',
                template: "\n    <div *ngIf=\"showHeader\">{{currentMonth}} - {{currentYear}}</div>\n    <table >\n      <thead >\n      <tr>\n        <th scope=\"col\" title=\"Monday\">Mo</th>\n        <th scope=\"col\" title=\"Tuesday\">Tu</th>\n        <th scope=\"col\" title=\"Wednesday\">We</th>\n        <th scope=\"col\" title=\"Thursday\">Th</th>\n        <th scope=\"col\" title=\"Friday\">Fr</th>\n        <th scope=\"col\" title=\"Saturday\">Sa</th>\n        <th scope=\"col\" title=\"Sunday\">Su</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let row of noOfRows let rowInd= index\"  >\n        <td *ngFor=\"let col of noOfColumn let colInd = index\"  #tdCell\n            (click)=\"clickHandler($event)\">\n          {{getMonthDate(colInd, rowInd)}}\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  ",
                styles: ["\n    :host {\n      display: block;\n      background-color: #fff;\n      height: 90%;\n      min-width: 300px;\n      font-family: sans-serif; }\n      :host div {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center;\n        font-size: 1.5rem;\n        font-weight: bold;\n        padding: 1rem;\n        border-top: 5px solid gray;\n        border-left: 1px solid gray;\n        border-right: 1px solid gray;\n        border-top-right-radius: 5px;\n        border-top-left-radius: 5px; }\n      :host table {\n        width: 100%;\n        height: 100%;\n        border-collapse: collapse;\n        border-spacing: 0px;\n        border: none;\n        font-size: 1rem;\n        border: 1px solid gray; }\n        :host table thead {\n          border-bottom: 1px solid rgba(128, 128, 128, 0.45);\n          border-spacing: 0px; }\n          :host table thead tr th {\n            background-color: #d0d0d0;\n            display: table-cell;\n            text-align: center;\n            vertical-align: middle;\n            padding: .5rem;\n            font-weight: bold; }\n        :host table tr td {\n          text-align: center;\n          cursor: pointer; }\n        :host table tr:nth-child(odd) {\n          background-color: #f2f2f2; }\n        :host table .currentDate {\n          border-bottom: 2px solid gray;\n          font-weight: bold; }\n        :host table .highlightDateCell {\n          background-color: #d0d0d0;\n          font-weight: bold; }\n  "]
            },] },
];
/**
 * @nocollapse
 */
NgxCalenderComponent.ctorParameters = function () { return [
    { type: Renderer2, },
]; };
NgxCalenderComponent.propDecorators = {
    'showHeader': [{ type: Input },],
    'clickedDate': [{ type: Output },],
    'tdCollection': [{ type: ViewChildren, args: ['tdCell',] },],
};
var CalenderModule = (function () {
    function CalenderModule() {
    }
    return CalenderModule;
}());
CalenderModule.decorators = [
    { type: NgModule, args: [{
                imports: [
                    CommonModule
                ],
                exports: [
                    NgxCalenderComponent
                ],
                declarations: [NgxCalenderComponent]
            },] },
];
/**
 * @nocollapse
 */
CalenderModule.ctorParameters = function () { return []; };
/**
 * Generated bundle index. Do not edit.
 */
export { CalenderModule, NgxCalenderComponent as Éµa };
//# sourceMappingURL=ngx-calender.es5.js.map
