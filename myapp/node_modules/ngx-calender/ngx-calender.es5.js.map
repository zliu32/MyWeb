{"version":3,"file":"ngx-calender.es5.js","sources":["ts/ngx-calender.ts","ts/src/app/modules/calender/calender.module.ts","ts/src/app/modules/calender/calender.component.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {CalenderModule} from './public_api';\n\nexport {NgxCalenderComponent as Éµa} from './src/app/modules/calender/calender.component';","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgxCalenderComponent } from './calender.component';\nexport class CalenderModule { static decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    NgxCalenderComponent\n  ],\n  declarations: [NgxCalenderComponent]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction CalenderModule_tsickle_Closure_declarations() {\n/** @type {?} */\nCalenderModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nCalenderModule.ctorParameters;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import {\n  Component, Input, OnInit, EventEmitter, Output, ViewChildren, ElementRef,\n  AfterViewInit, Renderer2\n} from '@angular/core';\nimport { format, subDays, getDaysInMonth, startOfMonth, getMonth, parse } from 'date-fns';\nexport class NgxCalenderComponent implements OnInit, AfterViewInit {\n\n   showHeader = true;\n   clickedDate = new EventEmitter<Date>();\n  currentDate: string;\n  currentMonth: string;\n  currentYear: number;\n  protected noOfColumn: Array<number>;\n  protected noOfRows: Array<number>;\nprivate currDaysInCurrMonth: number;\nprivate count: number;\nprivate tdCollection;\nprivate currMonthFirstDay: number;\n  protected isCurrentDate: boolean;\nprivate clickedDateCell: HTMLElement;\n/**\n * @param {?} renderer\n */\nconstructor(private renderer: Renderer2) {\n\n  }\n/**\n * @return {?}\n */\nngOnInit() {\n    this.count = 0;\n    this.noOfRows = Array(5).map((x, i) => i);\n    this.noOfColumn = Array(7).map((x, i) => i);\n    this.currentDate = format(new Date(), 'D');\n    this.currentMonth = format(new Date(), 'MMMM');\n    this.currentYear = Number(format(new Date(), 'YYYY'));\n    this.currDaysInCurrMonth = getDaysInMonth(new Date());\n    this.currMonthFirstDay = (Number(format(startOfMonth(new Date()), 'd')) - 1);\n  }\n/**\n * @return {?}\n */\nngAfterViewInit() {\n    this.tdCollection.map((x: ElementRef) => {\n      if (x.nativeElement.innerText === this.currentDate) {\n        this.renderer.addClass(x.nativeElement, 'currentDate');\n      }\n    });\n\n  }\n\n  getMonthDate: (colInd: number, rowIndex: number) => Number = function(colInd, rowIndex) {\n    if (colInd === 0 && rowIndex === 0) {\n      this.count = 0;\n    }\n    this.isCurrentDate = false;\n    if (rowIndex === 0) {\n      if (colInd >= this.currMonthFirstDay) {\n        return this.getDate();\n      }\n    } else if (this.count < this.currDaysInCurrMonth) {\n      return this.getDate();\n    }\n  };\n\n  getDate: () => number = function () {\n    this.count++;\n    return this.count;\n  };\n/**\n * @param {?} evt\n * @return {?}\n */\nclickHandler(evt: Event) {\n    if (evt.currentTarget['innerText'] !== '') {\n\n      if (this.clickedDateCell) {\n        this.renderer.removeClass(this.clickedDateCell, 'highlightDateCell');\n      }\n      this.clickedDateCell = /** @type {?} */(( <HTMLElement>evt.currentTarget));\n      this.renderer.addClass(this.clickedDateCell, 'highlightDateCell');\n      const /** @type {?} */ date = parse(`${this.currentYear}-${this.currentMonth}-${this.currentDate}`);\n      this.clickedDate.emit(date);\n    }\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ng-calender',\n  template: `\n    <div *ngIf=\"showHeader\">{{currentMonth}} - {{currentYear}}</div>\n    <table >\n      <thead >\n      <tr>\n        <th scope=\"col\" title=\"Monday\">Mo</th>\n        <th scope=\"col\" title=\"Tuesday\">Tu</th>\n        <th scope=\"col\" title=\"Wednesday\">We</th>\n        <th scope=\"col\" title=\"Thursday\">Th</th>\n        <th scope=\"col\" title=\"Friday\">Fr</th>\n        <th scope=\"col\" title=\"Saturday\">Sa</th>\n        <th scope=\"col\" title=\"Sunday\">Su</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr *ngFor=\"let row of noOfRows let rowInd= index\"  >\n        <td *ngFor=\"let col of noOfColumn let colInd = index\"  #tdCell\n            (click)=\"clickHandler($event)\">\n          {{getMonthDate(colInd, rowInd)}}\n        </td>\n      </tr>\n      </tbody>\n    </table>\n  `,\n  styles: [`\n    :host {\n      display: block;\n      background-color: #fff;\n      height: 90%;\n      min-width: 300px;\n      font-family: sans-serif; }\n      :host div {\n        display: -webkit-box;\n        display: -ms-flexbox;\n        display: flex;\n        -webkit-box-align: center;\n            -ms-flex-align: center;\n                align-items: center;\n        font-size: 1.5rem;\n        font-weight: bold;\n        padding: 1rem;\n        border-top: 5px solid gray;\n        border-left: 1px solid gray;\n        border-right: 1px solid gray;\n        border-top-right-radius: 5px;\n        border-top-left-radius: 5px; }\n      :host table {\n        width: 100%;\n        height: 100%;\n        border-collapse: collapse;\n        border-spacing: 0px;\n        border: none;\n        font-size: 1rem;\n        border: 1px solid gray; }\n        :host table thead {\n          border-bottom: 1px solid rgba(128, 128, 128, 0.45);\n          border-spacing: 0px; }\n          :host table thead tr th {\n            background-color: #d0d0d0;\n            display: table-cell;\n            text-align: center;\n            vertical-align: middle;\n            padding: .5rem;\n            font-weight: bold; }\n        :host table tr td {\n          text-align: center;\n          cursor: pointer; }\n        :host table tr:nth-child(odd) {\n          background-color: #f2f2f2; }\n        :host table .currentDate {\n          border-bottom: 2px solid gray;\n          font-weight: bold; }\n        :host table .highlightDateCell {\n          background-color: #d0d0d0;\n          font-weight: bold; }\n  `]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: Renderer2, },\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'showHeader': [{ type: Input },],\n'clickedDate': [{ type: Output },],\n'tdCollection': [{ type: ViewChildren, args: ['tdCell', ] },],\n};\n}\n\nfunction NgxCalenderComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nNgxCalenderComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nNgxCalenderComponent.ctorParameters;\n/** @type {?} */\nNgxCalenderComponent.propDecorators;\n/** @type {?} */\nNgxCalenderComponent.prototype.showHeader;\n/** @type {?} */\nNgxCalenderComponent.prototype.clickedDate;\n/** @type {?} */\nNgxCalenderComponent.prototype.currentDate;\n/** @type {?} */\nNgxCalenderComponent.prototype.currentMonth;\n/** @type {?} */\nNgxCalenderComponent.prototype.currentYear;\n/** @type {?} */\nNgxCalenderComponent.prototype.noOfColumn;\n/** @type {?} */\nNgxCalenderComponent.prototype.noOfRows;\n/** @type {?} */\nNgxCalenderComponent.prototype.currDaysInCurrMonth;\n/** @type {?} */\nNgxCalenderComponent.prototype.count;\n/** @type {?} */\nNgxCalenderComponent.prototype.tdCollection;\n/** @type {?} */\nNgxCalenderComponent.prototype.currMonthFirstDay;\n/** @type {?} */\nNgxCalenderComponent.prototype.isCurrentDate;\n/** @type {?} */\nNgxCalenderComponent.prototype.clickedDateCell;\n/** @type {?} */\nNgxCalenderComponent.prototype.getMonthDate;\n/** @type {?} */\nNgxCalenderComponent.prototype.getDate;\n/** @type {?} */\nNgxCalenderComponent.prototype.renderer;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":[],"mappings":"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"}
