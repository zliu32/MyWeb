{"remainingRequest":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\ng-pick-datetime\\date-time\\adapter\\date-time-adapter.class.js","dependencies":[{"path":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\ng-pick-datetime\\date-time\\adapter\\date-time-adapter.class.js","mtime":1529904269000},{"path":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1529671348740},{"path":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { Subject } from 'rxjs';\r\nimport { InjectionToken, LOCALE_ID } from '@angular/core';\r\nexport var OWL_DATE_TIME_LOCALE = new InjectionToken('OWL_DATE_TIME_LOCALE');\r\nexport var OWL_DATE_TIME_LOCALE_PROVIDER = { provide: OWL_DATE_TIME_LOCALE, useExisting: LOCALE_ID };\r\nvar DateTimeAdapter = /*@__PURE__*/ (function () {\r\n    function DateTimeAdapter() {\r\n        this._localeChanges = new Subject();\r\n        this.millisecondsInDay = 86400000;\r\n        this.milliseondsInMinute = 60000;\r\n    }\r\n    Object.defineProperty(DateTimeAdapter.prototype, \"localeChanges\", {\r\n        get: function () {\r\n            return this._localeChanges;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    DateTimeAdapter.prototype.compare = function (first, second) {\r\n        if (!this.isValid(first) || !this.isValid(second)) {\r\n            throw Error('JSNativeDate: Cannot compare invalid dates.');\r\n        }\r\n        var dateFirst = this.clone(first);\r\n        var dateSecond = this.clone(second);\r\n        var diff = this.getTime(dateFirst) - this.getTime(dateSecond);\r\n        if (diff < 0) {\r\n            return -1;\r\n        }\r\n        else if (diff > 0) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return diff;\r\n        }\r\n    };\r\n    DateTimeAdapter.prototype.compareYear = function (first, second) {\r\n        if (!this.isValid(first) || !this.isValid(second)) {\r\n            throw Error('JSNativeDate: Cannot compare invalid dates.');\r\n        }\r\n        var yearLeft = this.getYear(first);\r\n        var yearRight = this.getYear(second);\r\n        var diff = yearLeft - yearRight;\r\n        if (diff < 0) {\r\n            return -1;\r\n        }\r\n        else if (diff > 0) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    DateTimeAdapter.prototype.deserialize = function (value) {\r\n        if (value == null || this.isDateInstance(value) && this.isValid(value)) {\r\n            return value;\r\n        }\r\n        return this.invalid();\r\n    };\r\n    DateTimeAdapter.prototype.setLocale = function (locale) {\r\n        this.locale = locale;\r\n        this._localeChanges.next();\r\n    };\r\n    DateTimeAdapter.prototype.clampDate = function (date, min, max) {\r\n        if (min && this.compare(date, min) < 0) {\r\n            return min;\r\n        }\r\n        if (max && this.compare(date, max) > 0) {\r\n            return max;\r\n        }\r\n        return date;\r\n    };\r\n    return DateTimeAdapter;\r\n}());\r\nexport { DateTimeAdapter };\r\n",null]}