{"remainingRequest":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\ng-pick-datetime\\dialog\\dialog-ref.class.js","dependencies":[{"path":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\ng-pick-datetime\\dialog\\dialog-ref.class.js","mtime":1529904269000},{"path":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1529671348740},{"path":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { ESCAPE } from '@angular/cdk/keycodes';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { filter, take } from 'rxjs/operators';\r\nvar OwlDialogRef = /*@__PURE__*/ (function () {\r\n    function OwlDialogRef(overlayRef, container, id, location) {\r\n        var _this = this;\r\n        this.overlayRef = overlayRef;\r\n        this.container = container;\r\n        this.id = id;\r\n        this._beforeClose$ = new Subject();\r\n        this._afterOpen$ = new Subject();\r\n        this._afterClosed$ = new Subject();\r\n        this.locationChanged = Subscription.EMPTY;\r\n        this.disableClose = this.container.config.disableClose;\r\n        this.container.animationStateChanged\r\n            .pipe(filter(function (event) { return event.phaseName === 'done' && event.toState === 'enter'; }), take(1))\r\n            .subscribe(function () {\r\n            _this._afterOpen$.next();\r\n            _this._afterOpen$.complete();\r\n        });\r\n        this.container.animationStateChanged\r\n            .pipe(filter(function (event) { return event.phaseName === 'done' && event.toState === 'exit'; }), take(1))\r\n            .subscribe(function () {\r\n            _this.overlayRef.dispose();\r\n            _this.locationChanged.unsubscribe();\r\n            _this._afterClosed$.next(_this.result);\r\n            _this._afterClosed$.complete();\r\n            _this.componentInstance = (null);\r\n        });\r\n        this.overlayRef.keydownEvents()\r\n            .pipe(filter(function (event) { return event.keyCode === ESCAPE && !_this.disableClose; }))\r\n            .subscribe(function () { return _this.close(); });\r\n        if (location) {\r\n            this.locationChanged = location.subscribe(function () {\r\n                if (_this.container.config.closeOnNavigation) {\r\n                    _this.close();\r\n                }\r\n            });\r\n        }\r\n    }\r\n    OwlDialogRef.prototype.close = function (dialogResult) {\r\n        var _this = this;\r\n        this.result = dialogResult;\r\n        this.container.animationStateChanged\r\n            .pipe(filter(function (event) { return event.phaseName === 'start'; }), take(1))\r\n            .subscribe(function () {\r\n            _this._beforeClose$.next(dialogResult);\r\n            _this._beforeClose$.complete();\r\n            _this.overlayRef.detachBackdrop();\r\n        });\r\n        this.container.startExitAnimation();\r\n    };\r\n    OwlDialogRef.prototype.backdropClick = function () {\r\n        return this.overlayRef.backdropClick();\r\n    };\r\n    OwlDialogRef.prototype.keydownEvents = function () {\r\n        return this.overlayRef.keydownEvents();\r\n    };\r\n    OwlDialogRef.prototype.updatePosition = function (position) {\r\n        var strategy = this.getPositionStrategy();\r\n        if (position && (position.left || position.right)) {\r\n            position.left ? strategy.left(position.left) : strategy.right(position.right);\r\n        }\r\n        else {\r\n            strategy.centerHorizontally();\r\n        }\r\n        if (position && (position.top || position.bottom)) {\r\n            position.top ? strategy.top(position.top) : strategy.bottom(position.bottom);\r\n        }\r\n        else {\r\n            strategy.centerVertically();\r\n        }\r\n        this.overlayRef.updatePosition();\r\n        return this;\r\n    };\r\n    OwlDialogRef.prototype.updateSize = function (width, height) {\r\n        if (width === void 0) {\r\n            width = 'auto';\r\n        }\r\n        if (height === void 0) {\r\n            height = 'auto';\r\n        }\r\n        this.getPositionStrategy().width(width).height(height);\r\n        this.overlayRef.updatePosition();\r\n        return this;\r\n    };\r\n    OwlDialogRef.prototype.isAnimating = function () {\r\n        return this.container.isAnimating;\r\n    };\r\n    OwlDialogRef.prototype.afterOpen = function () {\r\n        return this._afterOpen$.asObservable();\r\n    };\r\n    OwlDialogRef.prototype.beforeClose = function () {\r\n        return this._beforeClose$.asObservable();\r\n    };\r\n    OwlDialogRef.prototype.afterClosed = function () {\r\n        return this._afterClosed$.asObservable();\r\n    };\r\n    OwlDialogRef.prototype.getPositionStrategy = function () {\r\n        return this.overlayRef.getConfig().positionStrategy;\r\n    };\r\n    return OwlDialogRef;\r\n}());\r\nexport { OwlDialogRef };\r\n",null]}