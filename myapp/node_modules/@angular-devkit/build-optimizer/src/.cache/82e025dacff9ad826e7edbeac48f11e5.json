{"remainingRequest":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\@swimlane\\ngx-charts\\release\\bar-chart\\bar-horizontal-2d.component.js","dependencies":[{"path":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\@swimlane\\ngx-charts\\release\\bar-chart\\bar-horizontal-2d.component.js","mtime":499162500000},{"path":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1529671348740},{"path":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\nimport { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Component, Input, ViewEncapsulation, Output, EventEmitter, ChangeDetectionStrategy, ContentChild, TemplateRef } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { scaleBand, scaleLinear } from 'd3-scale';\nimport { calculateViewDimensions } from '../common/view-dimensions.helper';\nimport { ColorHelper } from '../common/color.helper';\nimport { BaseChartComponent } from '../common/base-chart.component';\nvar BarHorizontal2DComponent = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(BarHorizontal2DComponent, _super);\n    function BarHorizontal2DComponent() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.legend = false;\n        _this.legendTitle = 'Legend';\n        _this.tooltipDisabled = false;\n        _this.showGridLines = true;\n        _this.activeEntries = [];\n        _this.groupPadding = 16;\n        _this.barPadding = 8;\n        _this.roundDomains = false;\n        _this.roundEdges = true;\n        _this.showDataLabel = false;\n        _this.activate = new EventEmitter();\n        _this.deactivate = new EventEmitter();\n        _this.margin = [10, 20, 10, 20];\n        _this.xAxisHeight = 0;\n        _this.yAxisWidth = 0;\n        _this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        return _this;\n    }\n    BarHorizontal2DComponent.prototype.update = function () {\n        _super.prototype.update.call(this);\n        if (!this.showDataLabel) {\n            this.dataLabelMaxWidth = { negative: 0, positive: 0 };\n        }\n        this.margin = [10, 20 + this.dataLabelMaxWidth.positive, 10, 20 + this.dataLabelMaxWidth.negative];\n        this.dims = calculateViewDimensions({\n            width: this.width,\n            height: this.height,\n            margins: this.margin,\n            showXAxis: this.xAxis,\n            showYAxis: this.yAxis,\n            xAxisHeight: this.xAxisHeight,\n            yAxisWidth: this.yAxisWidth,\n            showXLabel: this.showXAxisLabel,\n            showYLabel: this.showYAxisLabel,\n            showLegend: this.legend,\n            legendType: this.schemeType\n        });\n        this.formatDates();\n        this.groupDomain = this.getGroupDomain();\n        this.innerDomain = this.getInnerDomain();\n        this.valuesDomain = this.getValueDomain();\n        this.groupScale = this.getGroupScale();\n        this.innerScale = this.getInnerScale();\n        this.valueScale = this.getValueScale();\n        this.setColors();\n        this.legendOptions = this.getLegendOptions();\n        this.transform = \"translate(\" + this.dims.xOffset + \" , \" + this.margin[0] + \")\";\n    };\n    BarHorizontal2DComponent.prototype.getGroupScale = function () {\n        var spacing = this.groupDomain.length / (this.dims.height / this.groupPadding + 1);\n        return scaleBand()\n            .rangeRound([0, this.dims.height])\n            .paddingInner(spacing)\n            .paddingOuter(spacing / 2)\n            .domain(this.groupDomain);\n    };\n    BarHorizontal2DComponent.prototype.getInnerScale = function () {\n        var height = this.groupScale.bandwidth();\n        var spacing = this.innerDomain.length / (height / this.barPadding + 1);\n        return scaleBand()\n            .rangeRound([0, height])\n            .paddingInner(spacing)\n            .domain(this.innerDomain);\n    };\n    BarHorizontal2DComponent.prototype.getValueScale = function () {\n        var scale = scaleLinear()\n            .range([0, this.dims.width])\n            .domain(this.valuesDomain);\n        return this.roundDomains ? scale.nice() : scale;\n    };\n    BarHorizontal2DComponent.prototype.getGroupDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            if (!domain.includes(group.name)) {\n                domain.push(group.name);\n            }\n        }\n        return domain;\n    };\n    BarHorizontal2DComponent.prototype.getInnerDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            for (var _b = 0, _c = group.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (!domain.includes(d.name)) {\n                    domain.push(d.name);\n                }\n            }\n        }\n        return domain;\n    };\n    BarHorizontal2DComponent.prototype.getValueDomain = function () {\n        var domain = [];\n        for (var _i = 0, _a = this.results; _i < _a.length; _i++) {\n            var group = _a[_i];\n            for (var _b = 0, _c = group.series; _b < _c.length; _b++) {\n                var d = _c[_b];\n                if (!domain.includes(d.value)) {\n                    domain.push(d.value);\n                }\n            }\n        }\n        var min = Math.min.apply(Math, [0].concat(domain));\n        var max = this.xScaleMax\n            ? Math.max.apply(Math, [this.xScaleMax].concat(domain)) : Math.max.apply(Math, domain);\n        return [min, max];\n    };\n    BarHorizontal2DComponent.prototype.groupTransform = function (group) {\n        return \"translate(0, \" + this.groupScale(group.name) + \")\";\n    };\n    BarHorizontal2DComponent.prototype.onClick = function (data, group) {\n        if (group) {\n            data.series = group.name;\n        }\n        this.select.emit(data);\n    };\n    BarHorizontal2DComponent.prototype.trackBy = function (index, item) {\n        return item.name;\n    };\n    BarHorizontal2DComponent.prototype.setColors = function () {\n        var domain;\n        if (this.schemeType === 'ordinal') {\n            domain = this.innerDomain;\n        }\n        else {\n            domain = this.valuesDomain;\n        }\n        this.colors = new ColorHelper(this.scheme, this.schemeType, domain, this.customColors);\n    };\n    BarHorizontal2DComponent.prototype.getLegendOptions = function () {\n        var opts = {\n            scaleType: this.schemeType,\n            colors: undefined,\n            domain: [],\n            title: undefined\n        };\n        if (opts.scaleType === 'ordinal') {\n            opts.domain = this.innerDomain;\n            opts.colors = this.colors;\n            opts.title = this.legendTitle;\n        }\n        else {\n            opts.domain = this.valuesDomain;\n            opts.colors = this.colors.scale;\n        }\n        return opts;\n    };\n    BarHorizontal2DComponent.prototype.updateYAxisWidth = function (_a) {\n        var width = _a.width;\n        this.yAxisWidth = width;\n        this.update();\n    };\n    BarHorizontal2DComponent.prototype.updateXAxisHeight = function (_a) {\n        var height = _a.height;\n        this.xAxisHeight = height;\n        this.update();\n    };\n    BarHorizontal2DComponent.prototype.onDataLabelMaxWidthChanged = function (event, groupIndex) {\n        var _this = this;\n        if (event.size.negative) {\n            this.dataLabelMaxWidth.negative = Math.max(this.dataLabelMaxWidth.negative, event.size.width);\n        }\n        else {\n            this.dataLabelMaxWidth.positive = Math.max(this.dataLabelMaxWidth.positive, event.size.width);\n        }\n        if (groupIndex === (this.results.length - 1)) {\n            setTimeout(function () { return _this.update(); });\n        }\n    };\n    BarHorizontal2DComponent.prototype.onActivate = function (event, group) {\n        var item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        if (idx > -1) {\n            return;\n        }\n        this.activeEntries = [item].concat(this.activeEntries);\n        this.activate.emit({ value: item, entries: this.activeEntries });\n    };\n    BarHorizontal2DComponent.prototype.onDeactivate = function (event, group) {\n        var item = Object.assign({}, event);\n        if (group) {\n            item.series = group.name;\n        }\n        var idx = this.activeEntries.findIndex(function (d) {\n            return d.name === item.name && d.value === item.value && d.series === item.series;\n        });\n        this.activeEntries.splice(idx, 1);\n        this.activeEntries = this.activeEntries.slice();\n        this.deactivate.emit({ value: item, entries: this.activeEntries });\n    };\n    return BarHorizontal2DComponent;\n}(BaseChartComponent));\nexport { BarHorizontal2DComponent };\n//# sourceMappingURL=bar-horizontal-2d.component.js.map\n",null]}