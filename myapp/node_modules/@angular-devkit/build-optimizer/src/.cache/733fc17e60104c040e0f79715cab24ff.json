{"remainingRequest":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\@swimlane\\ngx-charts\\release\\bubble-chart\\bubble-series.component.js","dependencies":[{"path":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\@swimlane\\ngx-charts\\release\\bubble-chart\\bubble-series.component.js","mtime":499162500000},{"path":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1529671348740},{"path":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, TemplateRef } from '@angular/core';\nimport { trigger, style, animate, transition } from '@angular/animations';\nimport { formatLabel } from '../common/label.helper';\nvar BubbleSeriesComponent = /** @class */ /*@__PURE__*/ (function () {\n    function BubbleSeriesComponent() {\n        this.tooltipDisabled = false;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n    }\n    BubbleSeriesComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    BubbleSeriesComponent.prototype.update = function () {\n        this.circles = this.getCircles();\n    };\n    BubbleSeriesComponent.prototype.getCircles = function () {\n        var _this = this;\n        var seriesName = this.data.name;\n        return this.data.series.map(function (d, i) {\n            if (typeof d.y !== 'undefined' && typeof d.x !== 'undefined') {\n                var y = d.y;\n                var x = d.x;\n                var r = d.r;\n                var radius = _this.rScale(r || 1);\n                var tooltipLabel = formatLabel(d.name);\n                var cx = (_this.xScaleType === 'linear') ? _this.xScale(Number(x)) : _this.xScale(x);\n                var cy = (_this.yScaleType === 'linear') ? _this.yScale(Number(y)) : _this.yScale(y);\n                var color = (_this.colors.scaleType === 'linear') ?\n                    _this.colors.getColor(r) :\n                    _this.colors.getColor(seriesName);\n                var isActive = !_this.activeEntries.length ? true : _this.isActive({ name: seriesName });\n                var opacity = isActive ? 1 : 0.3;\n                var data = {\n                    series: seriesName,\n                    name: d.name,\n                    value: d.y,\n                    x: d.x,\n                    radius: d.r\n                };\n                return {\n                    data: data,\n                    x: x,\n                    y: y,\n                    r: r,\n                    classNames: [\"circle-data-\" + i],\n                    value: y,\n                    label: x,\n                    cx: cx,\n                    cy: cy,\n                    radius: radius,\n                    tooltipLabel: tooltipLabel,\n                    color: color,\n                    opacity: opacity,\n                    seriesName: seriesName,\n                    isActive: isActive,\n                    transform: \"translate(\" + cx + \",\" + cy + \")\"\n                };\n            }\n        }).filter(function (circle) { return circle !== undefined; });\n    };\n    BubbleSeriesComponent.prototype.getTooltipText = function (circle) {\n        var hasRadius = typeof circle.r !== 'undefined';\n        var hasTooltipLabel = circle.tooltipLabel && circle.tooltipLabel.length;\n        var hasSeriesName = circle.seriesName && circle.seriesName.length;\n        var radiusValue = hasRadius ? formatLabel(circle.r) : '';\n        var xAxisLabel = this.xAxisLabel && this.xAxisLabel !== '' ? this.xAxisLabel + \":\" : '';\n        var yAxisLabel = this.yAxisLabel && this.yAxisLabel !== '' ? this.yAxisLabel + \":\" : '';\n        var x = formatLabel(circle.x);\n        var y = formatLabel(circle.y);\n        var name = (hasSeriesName && hasTooltipLabel) ?\n            circle.seriesName + \" \\u2022 \" + circle.tooltipLabel :\n            circle.seriesName + circle.tooltipLabel;\n        var tooltipTitle = (hasSeriesName || hasTooltipLabel) ?\n            \"<span class=\\\"tooltip-label\\\">\" + name + \"</span>\" :\n            '';\n        return \"\\n      \" + tooltipTitle + \"\\n      <span class=\\\"tooltip-label\\\">\\n        <label>\" + xAxisLabel + \"</label> \" + x + \"<br />\\n        <label>\" + yAxisLabel + \"</label> \" + y + \"\\n      </span>\\n      <span class=\\\"tooltip-val\\\">\\n        \" + radiusValue + \"\\n      </span>\\n    \";\n    };\n    BubbleSeriesComponent.prototype.onClick = function (value, label) {\n        this.select.emit({\n            name: label,\n            value: value\n        });\n    };\n    BubbleSeriesComponent.prototype.isActive = function (entry) {\n        if (!this.activeEntries)\n            return false;\n        var item = this.activeEntries.find(function (d) {\n            return entry.name === d.name;\n        });\n        return item !== undefined;\n    };\n    BubbleSeriesComponent.prototype.isVisible = function (circle) {\n        if (this.activeEntries.length > 0) {\n            return this.isActive({ name: circle.seriesName });\n        }\n        return circle.opacity !== 0;\n    };\n    BubbleSeriesComponent.prototype.activateCircle = function (circle) {\n        circle.barVisible = true;\n        this.activate.emit({ name: this.data.name });\n    };\n    BubbleSeriesComponent.prototype.deactivateCircle = function (circle) {\n        circle.barVisible = false;\n        this.deactivate.emit({ name: this.data.name });\n    };\n    BubbleSeriesComponent.prototype.trackBy = function (index, circle) {\n        return circle.data.series + \" \" + circle.data.name;\n    };\n    return BubbleSeriesComponent;\n}());\nexport { BubbleSeriesComponent };\n//# sourceMappingURL=bubble-series.component.js.map\n",null]}