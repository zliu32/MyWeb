{"remainingRequest":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\ng-pick-datetime\\date-time\\calendar-year-view.component.js","dependencies":[{"path":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\ng-pick-datetime\\date-time\\calendar-year-view.component.js","mtime":1529904269000},{"path":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1529671348740},{"path":"C:\\Users\\Frank Liu\\Documents\\Github\\MyWeb\\myapp\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, HostBinding, Inject, Input, Optional, Output, ViewChild } from '@angular/core';\nimport { CalendarCell, OwlCalendarBodyComponent } from './calendar-body.component';\nimport { DateTimeAdapter } from './adapter/date-time-adapter.class';\nimport { OWL_DATE_TIME_FORMATS } from './adapter/date-time-format.class';\nimport { Subscription } from 'rxjs';\nimport { DOWN_ARROW, END, ENTER, HOME, LEFT_ARROW, PAGE_DOWN, PAGE_UP, RIGHT_ARROW, UP_ARROW } from '@angular/cdk/keycodes';\nvar MONTHS_PER_YEAR = 12;\nvar MONTHS_PER_ROW = 3;\nvar OwlYearViewComponent = /*@__PURE__*/ (function () {\n    function OwlYearViewComponent(cdRef, dateTimeAdapter, dateTimeFormats) {\n        this.cdRef = cdRef;\n        this.dateTimeAdapter = dateTimeAdapter;\n        this.dateTimeFormats = dateTimeFormats;\n        this._selecteds = [];\n        this.localeSub = Subscription.EMPTY;\n        this.initiated = false;\n        this.selectedMonths = [];\n        this.selectedChange = new EventEmitter();\n        this.monthSelected = new EventEmitter();\n        this.pickerMomentChange = new EventEmitter();\n        this.keyboardEnter = new EventEmitter();\n        this.monthNames = this.dateTimeAdapter.getMonthNames('short');\n    }\n    Object.defineProperty(OwlYearViewComponent.prototype, \"selected\", {\n        get: function () {\n            return this._selected;\n        },\n        set: function (value) {\n            value = this.dateTimeAdapter.deserialize(value);\n            this._selected = this.getValidDate(value);\n            this.setSelectedMonths();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlYearViewComponent.prototype, \"selecteds\", {\n        get: function () {\n            return this._selecteds;\n        },\n        set: function (values) {\n            this._selecteds = [];\n            for (var i = 0; i < values.length; i++) {\n                var value = this.dateTimeAdapter.deserialize(values[i]);\n                this._selecteds.push(this.getValidDate(value));\n            }\n            this.setSelectedMonths();\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlYearViewComponent.prototype, \"pickerMoment\", {\n        get: function () {\n            return this._pickerMoment;\n        },\n        set: function (value) {\n            var oldMoment = this._pickerMoment;\n            value = this.dateTimeAdapter.deserialize(value);\n            this._pickerMoment = this.getValidDate(value) || this.dateTimeAdapter.now();\n            if (!this.hasSameYear(oldMoment, this._pickerMoment) && this.initiated) {\n                this.generateMonthList();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlYearViewComponent.prototype, \"dateFilter\", {\n        get: function () {\n            return this._dateFilter;\n        },\n        set: function (filter) {\n            this._dateFilter = filter;\n            if (this.initiated) {\n                this.generateMonthList();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlYearViewComponent.prototype, \"minDate\", {\n        get: function () {\n            return this._minDate;\n        },\n        set: function (value) {\n            value = this.dateTimeAdapter.deserialize(value);\n            this._minDate = this.getValidDate(value);\n            if (this.initiated) {\n                this.generateMonthList();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlYearViewComponent.prototype, \"maxDate\", {\n        get: function () {\n            return this._maxDate;\n        },\n        set: function (value) {\n            value = this.dateTimeAdapter.deserialize(value);\n            this._maxDate = this.getValidDate(value);\n            if (this.initiated) {\n                this.generateMonthList();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlYearViewComponent.prototype, \"months\", {\n        get: function () {\n            return this._months;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlYearViewComponent.prototype, \"activeCell\", {\n        get: function () {\n            if (this._pickerMoment) {\n                return this.dateTimeAdapter.getMonth(this._pickerMoment);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlYearViewComponent.prototype, \"isInSingleMode\", {\n        get: function () {\n            return this.selectMode === 'single';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlYearViewComponent.prototype, \"isInRangeMode\", {\n        get: function () {\n            return this.selectMode === 'range' || this.selectMode === 'rangeFrom'\n                || this.selectMode === 'rangeTo';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(OwlYearViewComponent.prototype, \"owlDTCalendarView\", {\n        get: function () {\n            return true;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OwlYearViewComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.localeSub = this.dateTimeAdapter.localeChanges.subscribe(function () {\n            _this.generateMonthList();\n            _this.cdRef.markForCheck();\n        });\n    };\n    OwlYearViewComponent.prototype.ngAfterContentInit = function () {\n        this.generateMonthList();\n        this.initiated = true;\n    };\n    OwlYearViewComponent.prototype.ngOnDestroy = function () {\n        this.localeSub.unsubscribe();\n    };\n    OwlYearViewComponent.prototype.selectCalendarCell = function (cell) {\n        this.selectMonth(cell.value);\n    };\n    OwlYearViewComponent.prototype.selectMonth = function (month) {\n        var firstDateOfMonth = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(this.pickerMoment), month, 1);\n        this.monthSelected.emit(firstDateOfMonth);\n        var daysInMonth = this.dateTimeAdapter.getNumDaysInMonth(firstDateOfMonth);\n        var selected = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(this.pickerMoment), month, Math.min(daysInMonth, this.dateTimeAdapter.getDate(this.pickerMoment)), this.dateTimeAdapter.getHours(this.pickerMoment), this.dateTimeAdapter.getMinutes(this.pickerMoment), this.dateTimeAdapter.getSeconds(this.pickerMoment));\n        this.selectedChange.emit(selected);\n    };\n    OwlYearViewComponent.prototype.handleCalendarKeydown = function (event) {\n        var moment;\n        switch (event.keyCode) {\n            case LEFT_ARROW:\n                moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            case RIGHT_ARROW:\n                moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            case UP_ARROW:\n                moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -3);\n                this.pickerMomentChange.emit(moment);\n                break;\n            case DOWN_ARROW:\n                moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 3);\n                this.pickerMomentChange.emit(moment);\n                break;\n            case HOME:\n                moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, -this.dateTimeAdapter.getMonth(this.pickerMoment));\n                this.pickerMomentChange.emit(moment);\n                break;\n            case END:\n                moment = this.dateTimeAdapter.addCalendarMonths(this.pickerMoment, 11 - this.dateTimeAdapter.getMonth(this.pickerMoment));\n                this.pickerMomentChange.emit(moment);\n                break;\n            case PAGE_UP:\n                moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? -10 : -1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            case PAGE_DOWN:\n                moment = this.dateTimeAdapter.addCalendarYears(this.pickerMoment, event.altKey ? 10 : 1);\n                this.pickerMomentChange.emit(moment);\n                break;\n            case ENTER:\n                this.selectMonth(this.dateTimeAdapter.getMonth(this.pickerMoment));\n                this.keyboardEnter.emit();\n                break;\n            default:\n                return;\n        }\n        this.focusActiveCell();\n        event.preventDefault();\n    };\n    OwlYearViewComponent.prototype.generateMonthList = function () {\n        if (!this.pickerMoment) {\n            return;\n        }\n        this.setSelectedMonths();\n        this.todayMonth = this.getMonthInCurrentYear(this.dateTimeAdapter.now());\n        this._months = [];\n        for (var i = 0; i < MONTHS_PER_YEAR / MONTHS_PER_ROW; i++) {\n            var row = [];\n            for (var j = 0; j < MONTHS_PER_ROW; j++) {\n                var month = j + i * MONTHS_PER_ROW;\n                var monthCell = this.createMonthCell(month);\n                row.push(monthCell);\n            }\n            this._months.push(row);\n        }\n        return;\n    };\n    OwlYearViewComponent.prototype.createMonthCell = function (month) {\n        var startDateOfMonth = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(this.pickerMoment), month, 1);\n        var ariaLabel = this.dateTimeAdapter.format(startDateOfMonth, this.dateTimeFormats.monthYearA11yLabel);\n        var cellClass = 'owl-dt-month-' + month;\n        return new CalendarCell(month, this.monthNames[month], ariaLabel, this.isMonthEnabled(month), false, cellClass);\n    };\n    OwlYearViewComponent.prototype.isMonthEnabled = function (month) {\n        var firstDateOfMonth = this.dateTimeAdapter.createDate(this.dateTimeAdapter.getYear(this.pickerMoment), month, 1);\n        for (var date = firstDateOfMonth; this.dateTimeAdapter.getMonth(date) === month; date = this.dateTimeAdapter.addCalendarDays(date, 1)) {\n            if (!!date &&\n                (!this.dateFilter || this.dateFilter(date)) &&\n                (!this.minDate || this.dateTimeAdapter.compare(date, this.minDate) >= 0) &&\n                (!this.maxDate || this.dateTimeAdapter.compare(date, this.maxDate) <= 0)) {\n                return true;\n            }\n        }\n        return false;\n    };\n    OwlYearViewComponent.prototype.getMonthInCurrentYear = function (date) {\n        if (this.getValidDate(date) && this.getValidDate(this._pickerMoment)) {\n            var result = this.dateTimeAdapter.compareYear(date, this._pickerMoment);\n            if (result < 0) {\n                return -1;\n            }\n            else if (result > 0) {\n                return 12;\n            }\n            else {\n                return this.dateTimeAdapter.getMonth(date);\n            }\n        }\n        else {\n            return null;\n        }\n    };\n    OwlYearViewComponent.prototype.setSelectedMonths = function () {\n        this.selectedMonths = [];\n        if (this.isInSingleMode && this.selected) {\n            this.selectedMonths[0] = this.getMonthInCurrentYear(this.selected);\n        }\n        if (this.isInRangeMode && this.selecteds) {\n            this.selectedMonths[0] = this.getMonthInCurrentYear(this.selecteds[0]);\n            this.selectedMonths[1] = this.getMonthInCurrentYear(this.selecteds[1]);\n        }\n    };\n    OwlYearViewComponent.prototype.hasSameYear = function (dateLeft, dateRight) {\n        return !!(dateLeft && dateRight &&\n            this.dateTimeAdapter.getYear(dateLeft) === this.dateTimeAdapter.getYear(dateRight));\n    };\n    OwlYearViewComponent.prototype.getValidDate = function (obj) {\n        return (this.dateTimeAdapter.isDateInstance(obj) && this.dateTimeAdapter.isValid(obj)) ? obj : null;\n    };\n    OwlYearViewComponent.prototype.focusActiveCell = function () {\n        this.calendarBodyElm.focusActiveCell();\n    };\n    return OwlYearViewComponent;\n}());\nexport { OwlYearViewComponent };\n",null]}